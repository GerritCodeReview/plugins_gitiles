{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "00d2c1bf_ea7bd5a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-03-31T18:42:27Z",
      "side": 1,
      "message": "LGTM but I will let @Nasser give CR+2 as he had comments to resolve (will give CR+2 if he doesn\u0027t respond within a couple of days though).\nMy `nit` is just a proposal so feel free to accept/ignore it ;)",
      "revId": "557cca12c1d39fc27cf8c6ce764c0ee091632b90",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d81e9e1_9161dadb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/gitiles/GerritGitilesAccess.java",
        "patchSetId": 15
      },
      "lineNbr": 132,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-03-31T18:42:27Z",
      "side": 1,
      "message": "nit: if you want to play with streams + fluent API it could be simplified to a one-liner:\n\n  return projects.entrySet().stream()\n    .filter(e -\u003e !e.getValue().state.equals(HIDDEN))\n    .collect(Collectors.toUnmodifiableMap(Map.Entry::getKey, Map.Entry::getValue));",
      "range": {
        "startLine": 126,
        "startChar": 4,
        "endLine": 132,
        "endChar": 47
      },
      "revId": "557cca12c1d39fc27cf8c6ce764c0ee091632b90",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "557cca12c1d39fc27cf8c6ce764c0ee091632b90",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "557cca12c1d39fc27cf8c6ce764c0ee091632b90",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "557cca12c1d39fc27cf8c6ce764c0ee091632b90",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}